<launch>

  <arg name="real" default="false" />
  <arg name="robot" default="203" />
  <arg name="output" default="screen" />
  <arg name="remapped_tf" default="/robot_tf" />
  <arg name="default_rate" default="20" />
  <arg name="model" default="$(find drchubo_v3)/robots/drchubo_v3.urdf" />
  <arg name="pi/2" value="1.5707963267948966" />
  <arg name="optical_rotate" value="0 0 0 -$(arg pi/2) 0 -$(arg pi/2)" />

  <machine name="hubo" address="192.168.0.$(arg robot)" user="hubo" password="      " env-loader="/opt/ros/groovy/env.sh" />

  <group ns="drchubo_fullbody_interface">
    <!-- Interface to hardware (runs on chest computer) -->
    <node if="$(arg real)" machine="hubo" name="drchubo_fullbody_feedback_node" pkg="hubo_ach_ros_bridge" type="feedback" output="$(arg output)" >
      <rosparam command="load" file="$(find hubo_launch)/config/drchubo_fullbody_wfingers_params.yaml" />
      <remap from="/tf" to="$(arg remapped_tf)" />
    </node>
    <!-- Robot state & model -->
    <param name="robot_description" textfile="$(arg model)" />
    <node name="joint_state_publisher" pkg="hubo_ach_ros_bridge" type="drchubo_joint_state_publisher.py" output="$(arg output)">
      <remap from="/tf" to="$(arg remapped_tf)" />
    </node>
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" output="$(arg output)" >
      <remap from="/tf" to="$(arg remapped_tf)" />
    </node>
    <node name="body_orientation_publisher" pkg="hubo_ach_ros_bridge" type="body_orientation_publisher.py" output="$(arg output)">
      <param name="target_frame" type="string" value="world_orientation_frame" />
      <param name="root_frame" type="string" value="body_imu_sensor_frame" />
      <param name="rate" type="double" value="100" />
      <param name="imu_topic" type="string" value="body_imu" />
      <remap from="/tf" to="$(arg remapped_tf)" />
    </node>
    <node name="laser_orientation_publisher" pkg="hubo_head_controller" type="laser_orientation_publisher.py" output="$(arg output)">
      <param name="head_variant" type="string" value="prebeta" />
      <param name="laser_frame" type="string" value="laser_sensor_frame" />
      <param name="root_frame" type="string" value="Body_NK2" />
      <param name="laser_joint" type="string" value="NK3" />
      <param name="rate" type="double" value="100" />
      <remap from="/tf" to="$(arg remapped_tf)" />
    </node>
    <!-- Sensor head -->
    <include file="$(find hubo_launch)/launch/head_controller_manager.launch" />
    <include file="$(find hubo_launch)/launch/head_controller_spawner.launch" />
    <node name="laser_scan_controller" pkg="hubo_head_controller" type="laser_scan_controller.py" output="$(arg output)">
      <remap from="/tf" to="$(arg remapped_tf)" />
    </node>
    <node name="point_head_controller" pkg="hubo_head_controller" type="point_head_controller.py" output="$(arg output)">
      <remap from="/tf" to="$(arg remapped_tf)" />
    </node>
    <!-- Sensor frames -->
    <include file="$(find hubo_launch)/launch/drchubo_sensor_frames.launch" >
      <arg name="remapped_tf" value="$(arg remapped_tf)" />
    </include>
    <!-- Trinocular frames -->
    <include file="$(find hubo_launch)/launch/drchubo_trinocular_frames.launch" >
      <arg name="remapped_tf" value="$(arg remapped_tf)" />
    </include>
    <!-- RGBD frames -->
    <include file="$(find hubo_launch)/launch/drchubo_rgbd_frames.launch" >
      <arg name="remapped_tf" value="$(arg remapped_tf)" />
    </include>
    <!-- Dual RGBD cameras -->
    <include file="$(find hubo_launch)/launch/openni2_launch/drchubo_rgbd.launch" >
      <arg name="remapped_tf" value="$(arg remapped_tf)" />
    </include>
    <!-- Teleoperation link start-side components -->
    <include file="$(find teleop_launch)/launch/limited_link_start_chain.launch">
      <arg name="chain_name" value="joints" />
      <arg name="chain_type" value="sensor_msgs/JointState" />
      <arg name="input_topic" value="joint_states" />
      <arg name="link_namespace" value="link" />
      <arg name="relay_namespace" value="relay" />
      <arg name="default_rate" value="$(arg default_rate)" />
    </include>
    <!-- Force-torque sensors -->
    <include file="$(find teleop_launch)/launch/limited_link_start_chain.launch">
      <arg name="chain_name" value="left_wrist_ft" />
      <arg name="chain_type" value="geometry_msgs/WrenchStamped" />
      <arg name="input_topic" value="left_wrist_ft" />
      <arg name="link_namespace" value="link" />
      <arg name="relay_namespace" value="relay" />
      <arg name="default_rate" value="$(arg default_rate)" />
    </include>
    <include file="$(find teleop_launch)/launch/limited_link_start_chain.launch">
      <arg name="chain_name" value="right_wrist_ft" />
      <arg name="chain_type" value="geometry_msgs/WrenchStamped" />
      <arg name="input_topic" value="right_wrist_ft" />
      <arg name="link_namespace" value="link" />
      <arg name="relay_namespace" value="relay" />
      <arg name="default_rate" value="$(arg default_rate)" />
    </include>
    <include file="$(find teleop_launch)/launch/limited_link_start_chain.launch">
      <arg name="chain_name" value="left_ankle_ft" />
      <arg name="chain_type" value="geometry_msgs/WrenchStamped" />
      <arg name="input_topic" value="left_ankle_ft" />
      <arg name="link_namespace" value="link" />
      <arg name="relay_namespace" value="relay" />
      <arg name="default_rate" value="$(arg default_rate)" />
    </include>
    <include file="$(find teleop_launch)/launch/limited_link_start_chain.launch">
      <arg name="chain_name" value="right_ankle_ft" />
      <arg name="chain_type" value="geometry_msgs/WrenchStamped" />
      <arg name="input_topic" value="right_ankle_ft" />
      <arg name="link_namespace" value="link" />
      <arg name="relay_namespace" value="relay" />
      <arg name="default_rate" value="$(arg default_rate)" />
    </include>
    <!-- Body IMU -->
    <include file="$(find teleop_launch)/launch/limited_link_start_chain.launch">
      <arg name="chain_name" value="imu" />
      <arg name="chain_type" value="sensor_msgs/Imu" />
      <arg name="input_topic" value="body_imu" />
      <arg name="link_namespace" value="link" />
      <arg name="relay_namespace" value="relay" />
      <arg name="default_rate" value="$(arg default_rate)" />
    </include>
    <!-- Upper RGBD camera & pointcloud -->
    <node name="longrange_rgbd_link_start" pkg="opportunistic_link" type="limited_image_link_startpoint" output="$(arg output)">
      <param name="input_topic" type="string" value="/rgbd_longrange/image_color" />
      <param name="link_topic" type="string" value="/link/rgbd_longrange/image_color" />
      <param name="link_ctrl" type="string" value="/rgbd_longrange/ctrl" />
      <param name="rate_ctrl" type="string" value="/rgbd_longrange/rate" />
      <param name="default_rate" type="double" value="$(arg default_rate)" />
      <remap from="/tf" to="$(arg remapped_tf)" />
    </node>
    <include file="$(find teleop_launch)/launch/limited_link_start_chain.launch">
      <arg name="chain_name" value="rgbd_longrange_cloud" />
      <arg name="chain_type" value="sensor_msgs/PointCloud2" />
      <arg name="input_topic" value="rgbd_longrange/depth/points_xyzrgb" />
      <arg name="link_namespace" value="link" />
      <arg name="relay_namespace" value="relay" />
      <arg name="default_rate" value="$(arg default_rate)" />
    </include>
    <!-- Lower RGBD camera -->
    <node name="shortrange_rgbd_link_start" pkg="opportunistic_link" type="limited_image_link_startpoint" output="$(arg output)">
      <param name="input_topic" type="string" value="/rgbd_shortrange/image_color" />
      <param name="link_topic" type="string" value="/link/rgbd_shortrange/image_color" />
      <param name="link_ctrl" type="string" value="/rgbd_shortrange/ctrl" />
      <param name="rate_ctrl" type="string" value="/rgbd_shortrange/rate" />
      <param name="default_rate" type="double" value="$(arg default_rate)" />
      <remap from="/tf" to="$(arg remapped_tf)" />
    </node>
    <include file="$(find teleop_launch)/launch/limited_link_start_chain.launch">
      <arg name="chain_name" value="rgbd_shortrange_cloud" />
      <arg name="chain_type" value="sensor_msgs/PointCloud2" />
      <arg name="input_topic" value="rgbd_shortrange/depth/points_xyzrgb" />
      <arg name="link_namespace" value="link" />
      <arg name="relay_namespace" value="relay" />
      <arg name="default_rate" value="$(arg default_rate)" />
    </include>

  </group>
</launch>

