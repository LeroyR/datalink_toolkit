<launch>

  <arg name="aggregation_topic" default="Aggregator" />
  <arg name="aggregated_topic" default="Aggregated" />

  <!-- Set up the link startpoint and serializer for joint states -->

  <include file="$(find teleop_launch)/launch/link_start_chain.launch">
    <arg name="chain_name" value="jointstates" />
    <arg name="chain_type" value="sensor_msgs/JointState" />
    <arg name="input_topic" value="joint_states" />
    <arg name="aggregation_topic" value="$(arg aggregation_topic)" />
  </include>

  <!-- Set up the link startpoint and serializer for base laser scans -->

  <include file="$(find teleop_launch)/launch/link_start_chain.launch">
    <arg name="chain_name" value="basescan" />
    <arg name="chain_type" value="sensor_msgs/LaserScan" />
    <arg name="input_topic" value="base_scan" />
    <arg name="aggregation_topic" value="$(arg aggregation_topic)" />
  </include>

  <!-- Set up the link startpoint and serializer for Kinect camera images -->

  <include file="$(find teleop_launch)/launch/link_start_chain.launch">
    <arg name="chain_name" value="kinectcam" />
    <arg name="chain_type" value="sensor_msgs/Image" />
    <arg name="input_topic" value="head_mount_kinect/rgb/image_color" />
    <arg name="aggregation_topic" value="$(arg aggregation_topic)" />
  </include>

  <!-- Set up the link startpoint and serializer for Kinect camera info -->

  <include file="$(find teleop_launch)/launch/link_start_chain.launch">
    <arg name="chain_name" value="kinectcaminfo" />
    <arg name="chain_type" value="sensor_msgs/CameraInfo" />
    <arg name="input_topic" value="head_mount_kinect/rgb/camera_info" />
    <arg name="aggregation_topic" value="$(arg aggregation_topic)" />
  </include>

  <!-- Set up the message multiplexer -->

  <node pkg="teleop_mux_demux" type="message_multiplexer.py" name="multiplexer" output="screen" >
    <param name="aggregation_topic" type="string" value="$(arg aggregation_topic)" />
    <param name="aggregated_topic" type="string" value="$(arg aggregated_topic)" />
  </node>

</launch>
